name: Setup
description: Setup
inputs:
  ghcr-login:
    description: Test
    required: true
    default: 'false'
  ghcr-pat:
    description: Test
    required: false
  aws-login:
    description: Test
    required: true
    default: 'false'
  aws-account-id:
    description: Test
    required: false
  aws-role-name:
    description: Test
    required: true
    default: 'GitHub'
  aws-ecr-login:
    description: Test
    required: true
    default: 'false'
runs:
  using: composite
  steps:
    - name: Login to GitHub Container registry
      if: inputs.ghcr-login == 'true' && inputs.ghcr-pat != ''
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.ghcr-pat }}
    - name: Configure AWS Credentials
      if: inputs.aws-login == 'true' && inputs.aws-account-id != '' && inputs.aws-role-name != ''
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-west-1
        role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/${{ inputs.aws-role-name }}
    - name: Store AWS Credentials
      if: inputs.aws-login == 'true' && inputs.aws-account-id != '' && inputs.aws-role-name != ''
      shell: bash
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id = ${{ env.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key = ${{ env.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
        echo "aws_session_token = ${{ env.AWS_SESSION_TOKEN }}" >> ~/.aws/credentials
    - name: Login to Amazon ECR
      if: inputs.aws-login == 'true' && inputs.aws-account-id != '' && inputs.aws-role-name != '' && inputs.aws-ecr-login == 'true'
      uses: aws-actions/amazon-ecr-login@v1
